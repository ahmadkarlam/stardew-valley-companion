{"version":3,"sources":["datatable.js","sell_item.js","App.js","reportWebVitals.js","index.js"],"names":["columns","name","selector","sortable","cell","row","index","DisplayName","image","src","alt","format","price","subTotal","Datatable","props","title","data","pagination","selectableRows","onSelectedRowsChange","onSelect","SellItem","className","money","totalSellItem","Number","parseString","require","transformItemOnChest","chest","isSelected","quality","database","images","toLowerCase","basePrice","multiplicationFactor","multiplication_quality","Math","floor","calculatePrice","stack","App","useState","setData","items","setItems","setMoney","setTotalSellItem","parseAndSetDataFromSaveFile","xmlString","explicitArray","err","result","SaveGame","alert","locations","GameLocation","filter","gameLocation","objects","item","Array","isArray","map","value","Object","length","forEach","x","concat","Item","getAndSetItemFromSaveGame","player","style","marginTop","type","onChange","e","onLoad","reader","FileReader","onload","readAsText","target","files","onChangeSaveFile","event","selectedRows","reduce","total","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3f8dc16.chunk.js","sourcesContent":["import DataTable from 'react-data-table-component';\r\nimport React from \"react\";\r\n\r\nconst columns = [\r\n  {\r\n    name: 'Item Name',\r\n    selector: 'DisplayName',\r\n    sortable: true,\r\n    cell: (row, index) => <div>\r\n      <span>{row.DisplayName}</span>\r\n      {row.image !== '' && <img src={row.image} alt={index}/>}\r\n    </div>,\r\n  },\r\n  {\r\n    name: 'Qty',\r\n    selector: 'stack',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Price',\r\n    selector: 'price',\r\n    sortable: true,\r\n    format: row => `${row.price}g`\r\n  },\r\n  {\r\n    name: 'Sub Total',\r\n    selector: 'subTotal',\r\n    sortable: true,\r\n    format: row => `${row.subTotal}g`\r\n  },\r\n];\r\n\r\nexport default function Datatable(props) {\r\n  return (\r\n    <DataTable\r\n      title=\"All Items (from chest)\"\r\n      columns={columns}\r\n      data={props.data}\r\n      pagination={true}\r\n      selectableRows={true}\r\n      onSelectedRowsChange={props.onSelect}\r\n    />\r\n  )\r\n};","import React from \"react\";\r\n\r\nexport default function SellItem(props) {\r\n  return (\r\n    <div className='sell-item-container'>\r\n      <h4>Sell Item(s)</h4>\r\n      <table className='table'>\r\n        <thead>\r\n        <tr>\r\n          <td/>\r\n          <th>Money</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr>\r\n          <th>Money</th>\r\n          <td>{props.money}g</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Total Selling</th>\r\n          <td>{props.totalSellItem}g</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Total</th>\r\n          <td>{Number(props.money) + Number(props.totalSellItem)}g</td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}","import React, {useState} from \"react\";\nimport database from './database.json';\nimport Datatable from \"./datatable\";\nimport SellItem from \"./sell_item\";\n\nconst parseString = require('xml2js').parseString;\n\nfunction transformItemOnChest(chest) {\n  chest = {\n    ...chest,\n    image: '',\n    isSelected: 0\n  };\n  chest.quality = database.quality[chest.quality] || \"Regular\";\n  chest.image = database.images[`${chest.quality.toLowerCase()}_quality_icon`];\n  chest.basePrice = Number(chest.price) || 0;\n  chest.price = calculatePrice(chest.basePrice, chest.quality);\n  chest.stack = Number(chest.stack) || 1;\n  chest.subTotal = chest.price * chest.stack;\n  return chest;\n}\n\nfunction calculatePrice(basePrice, quality) {\n  const multiplicationFactor = database.multiplication_quality[quality];\n  return Math.floor((basePrice * multiplicationFactor) + basePrice);\n}\n\nfunction getAndSetItemFromSaveGame(data, setItems) {\n  data.SaveGame.locations.GameLocation\n    .filter(gameLocation => gameLocation.objects.item)\n    .filter(gameLocation => Array.isArray(gameLocation.objects.item))\n    .map(gameLocation => {\n      gameLocation.objects.item = gameLocation.objects.item\n        .filter(item => item.value.Object.name === 'Chest')\n      return gameLocation;\n    })\n    .filter(gameLocation => gameLocation.objects.item.length > 0)\n    .forEach(gameLocation => {\n      gameLocation.objects.item\n        .forEach(chest => {\n          setItems(x => x.concat(\n            chest.value.Object.items.Item.map(transformItemOnChest)\n          ));\n        });\n    });\n}\n\nfunction onChangeSaveFile(e, onLoad) {\n  const reader = new FileReader();\n  reader.onload = onLoad;\n  reader.readAsText(e.target.files[0]);\n}\n\nfunction App() {\n  const [data, setData] = useState({});\n  const [items, setItems] = useState([]);\n  const [money, setMoney] = useState(0);\n  const [totalSellItem, setTotalSellItem] = useState(0);\n\n  const parseAndSetDataFromSaveFile = xmlString => {\n    parseString(xmlString, {explicitArray: false}, (err, result) => {\n      if (result) {\n        if (!!!result.SaveGame) {\n          alert('Invalid save file.');\n          return;\n        }\n        setData(result);\n        getAndSetItemFromSaveGame(result, setItems);\n        setMoney(result.SaveGame.player.money);\n      }\n    });\n  };\n\n  return (\n    <div className=\"App container\">\n      <div className=\"row\" style={{marginTop: 10}}>\n        <div className=\"col-12\">\n          <h4>Load save file:</h4>\n          <input type=\"file\" name='save' onChange={(e) => {\n            onChangeSaveFile(e, (event) => parseAndSetDataFromSaveFile(event.target.result));\n          }}/>\n          <p>Default save location:</p>\n          <ul>\n            <li>Windows: %AppData%\\StardewValley\\Saves\\</li>\n            <li>Mac OSX & Linux: ~/.config/StardewValley/Saves/</li>\n          </ul>\n        </div>\n        <div className=\"col-8\">\n          <Datatable\n            data={items}\n            onSelect={({selectedRows}) => {\n              setTotalSellItem(selectedRows.reduce((total, item) => total += item.subTotal, 0));\n            }}\n          />\n        </div>\n        <div className=\"col\">\n          <SellItem money={money} totalSellItem={totalSellItem}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}